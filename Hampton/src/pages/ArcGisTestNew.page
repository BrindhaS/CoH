<apex:page StandardController="Case" extensions="CaseGeocodeController" showHeader="false" sidebar="false" standardStyleSheets="false" cache="false">

            <title>Address Locator</title>
            <apex:stylesheet value="{!URLFOR($Resource.publicAssets,'css/reset.css')}" />  
            <link href='//serverapi.arcgisonline.com/jsapi/arcgis/2.4/js/dojo/dijit/themes/tundra/tundra.css' rel='stylesheet' type='text/css' />
            <link rel="stylesheet" href="//serverapi.arcgisonline.com/jsapi/arcgis/3.3/js/esri/css/esri.css" />
            <script type="text/javascript" src="//serverapi.arcgisonline.com/jsapi/arcgis?v=2.4"></script>
            <apex:includeScript value="{!URLFOR($Resource.publicAssets,'js/jquery.min.js')}" />   
            <apex:includeScript value="{!URLFOR($Resource.publicAssets,'js/handlebars-1.0.rc.1.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.publicAssets,'js/handlebars.helpers.js')}" />
            <apex:stylesheet value="{!URLFOR($Resource.publicAssets,'css/style.css')}" /> 
           
           <!-- If Customer is viewing this page, then he will only able to see the map not the related cases -->
            <apex:outputPanel layout="none" rendered="{!$Profile.Name == 'Customer Portal user'}">
                <style>
                    map {
                        width:99%;               
                    }
                </style>
            </apex:outputPanel>   
            <span class="tundra">
            
            <!-- Block containing Hampton Map -->
                <div id="map" class="shadow roundedCorners">
                
                </div>
           <!-- Block containing Related Cases -->     
               <apex:outputPanel layout="none" rendered="{!$Profile.Name != 'Customer Portal user'}">   
                    <div id="list" class="shadow roundedCorners">
                        <ul id ="case-list"></ul>
                    </div>
                </apex:outputPanel>
            </span>
            
            <script>
                String.prototype.trunc = function(n) {
                      return this.substr(0, n - 1);
                };
            </script>
            
            <!-- a template for displaying the related cases -->
            <script id="template" type="text/x-handlebars-template">
                
                    {{#each this}}  
                    <li>
                       <span class='x-left'><a href='/{{Id}}' target='_blank'>{{CaseNumber}}</a></span><span class='x-right'>{{CreatedDateString__c}}</span><br />
                        <span class='x-left'>Priority: {{Priority}}</span><span class='x-right'>{{Status}}</span> <br />
                        <hr class='hr-line' />
                        Address: {{Street__c}} <br />
                        <span title='{{Subject}}'></span> <br />
                        <br />
                        <a class="button x-left" onclick="locate({{Address_X__c}},{{Address_Y__c}})">Locate</a>
                        <a  class="button x-right" onclick="if(!confirm('Do you want to set the Primary Case field of the {!Case.casenumber} to the Case Number of the designated similar Case {{CaseNumber}}')){return false;}else{closeDupliacte('{{Id}}','{!Case.id}')}">Make this the parent</a>
                    
                    </li>
                    {{/each}}   
                
            </script>
            <script type="text/javascript">
                if ( !Array.prototype.forEach ) {
                    Array.prototype.forEach = function(fn, scope) {
                        for(var i = 0, len = this.length; i < len; ++i) {
                            fn.call(scope, this[i], i, this);
                        }
                    }
                }
                var delay = (function(){
                    var timer = 0;
                    return function(callback, ms){
                        clearTimeout(timer);
                        timer = setTimeout(callback, ms);
                    };
                })();
                
                dojo.require("esri.map");
                var map, initExtent;
                
                function Init() {
                
                   initExtent = new esri.geometry.Extent({"xmin":-76.4601844865076,"ymin":36.9824127087404,"xmax":-76.2608808326593,"ymax":37.1282260791777,"spatialReference":{"wkid":4326}});                    
                   map = new esri.Map("map",{ extent: initExtent});
                    
                    var layer = '{!esriConfig.Layer__c}';

                    var layerList = layer.split(';');
                    
                    layerList.forEach(function(each, index, array) {
                        map.addLayer(
                            new esri.layers.ArcGISDynamicMapServiceLayer(each)
                        );
                    });
                    map.setLevel(0.04);                       
                    var resizeTimer;
                    dojo.connect(map, 'onLoad', function(theMap) {
                       
                
                        CaseGeocodeController.AddressGeocode('500M0000003fB', map.spatialReference, function(result,event){
                           if (event.status){
                               // var x = -76.347763;
                               // var y = 37.027586;
                                var x,y; 
                                var symbol = new esri.symbol.SimpleMarkerSymbol();
                                symbol.setStyle(esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE);
                                symbol.setColor(new dojo.Color("#B34066"));
                                var point;
    
                                point = new esri.geometry.Point(x,y, map.SpatialReference); 
                                
                                var displayText = "Testing";                               
                                var font = new esri.symbol.Font(
                                            "12pt",
                                            esri.symbol.Font.STYLE_NORMAL, 
                                            esri.symbol.Font.VARIANT_NORMAL,
                                            esri.symbol.Font.WEIGHT_BOLD,
                                            "Helvetica"             
                                        );
                                var textSymbol = new esri.symbol.TextSymbol(displayText,font,new dojo.Color("#666633"));
                                textSymbol.setOffset(0,8);
                                map.graphics.add(new esri.Graphic(point,symbol));
                                map.graphics.add(new esri.Graphic(point, textSymbol));
                                if(point != undefined){
                                       map.centerAt(point);
                                }
                            }
                        });
               
                            
                        dojo.connect(dijit.byId('map'), 'resize', function() {
                            clearTimeout(resizeTimer);
                            resizeTimer = setTimeout(function() {
                                map.resize();
                                map.reposition();
                            }, 10);
                        });
                    });
                }
                dojo.addOnLoad(Init);
                function locate(x2,y2){
                                   
                    var point = new esri.geometry.Point(x2,y2, map.spatialReference); 
                    map.centerAt(point);
                                
                }
                function closeDupliacte(parentId, childId){
                    CaseGeocodeController.RelateCaseAndClose(parentId, childId ,function(result,event){
                        alert(result);
                    });
                }
            </script>
            

</apex:page>